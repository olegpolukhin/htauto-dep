// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.recovery.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RecoveryRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecoveryRequest) Reset()         { *m = RecoveryRequest{} }
func (m *RecoveryRequest) String() string { return proto.CompactTextString(m) }
func (*RecoveryRequest) ProtoMessage()    {}
func (*RecoveryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_53221ab5316e6919, []int{0}
}

func (m *RecoveryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecoveryRequest.Unmarshal(m, b)
}
func (m *RecoveryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecoveryRequest.Marshal(b, m, deterministic)
}
func (m *RecoveryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecoveryRequest.Merge(m, src)
}
func (m *RecoveryRequest) XXX_Size() int {
	return xxx_messageInfo_RecoveryRequest.Size(m)
}
func (m *RecoveryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecoveryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecoveryRequest proto.InternalMessageInfo

func (m *RecoveryRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type RecoveryResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecoveryResponse) Reset()         { *m = RecoveryResponse{} }
func (m *RecoveryResponse) String() string { return proto.CompactTextString(m) }
func (*RecoveryResponse) ProtoMessage()    {}
func (*RecoveryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_53221ab5316e6919, []int{1}
}

func (m *RecoveryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecoveryResponse.Unmarshal(m, b)
}
func (m *RecoveryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecoveryResponse.Marshal(b, m, deterministic)
}
func (m *RecoveryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecoveryResponse.Merge(m, src)
}
func (m *RecoveryResponse) XXX_Size() int {
	return xxx_messageInfo_RecoveryResponse.Size(m)
}
func (m *RecoveryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecoveryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecoveryResponse proto.InternalMessageInfo

func (m *RecoveryResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func init() {
	proto.RegisterType((*RecoveryRequest)(nil), "proto.RecoveryRequest")
	proto.RegisterType((*RecoveryResponse)(nil), "proto.RecoveryResponse")
}

func init() {
	proto.RegisterFile("service.recovery.proto", fileDescriptor_53221ab5316e6919)
}

var fileDescriptor_53221ab5316e6919 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x4a, 0x4d, 0xce, 0x2f, 0x4b, 0x2d, 0xaa, 0xd4, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xea, 0x5c, 0xfc, 0x41, 0x50, 0x89, 0xa0, 0xd4, 0xc2,
	0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x11, 0x2e, 0xd6, 0xd4, 0xdc, 0xc4, 0xcc, 0x1c, 0x09, 0x46, 0x05,
	0x46, 0x0d, 0xce, 0x20, 0x08, 0x47, 0x49, 0x8b, 0x4b, 0x00, 0xa1, 0xb0, 0xb8, 0x20, 0x3f, 0xaf,
	0x38, 0x55, 0x48, 0x8c, 0x8b, 0xad, 0xb8, 0x24, 0xb1, 0xa4, 0xb4, 0x18, 0xac, 0x94, 0x23, 0x08,
	0xca, 0x33, 0x0a, 0x43, 0x18, 0x1a, 0x0c, 0xb1, 0x5d, 0xc8, 0x99, 0x4b, 0x20, 0x20, 0xb1, 0xb8,
	0xb8, 0x3c, 0xbf, 0x28, 0x05, 0x26, 0x25, 0x24, 0x06, 0x71, 0x8a, 0x1e, 0x9a, 0x03, 0xa4, 0xc4,
	0x31, 0xc4, 0x21, 0xf6, 0x25, 0xb1, 0x81, 0xc5, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf8,
	0xc5, 0xae, 0x0f, 0xd4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RecoveryServiceClient is the client API for RecoveryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecoveryServiceClient interface {
	PasswordRecovery(ctx context.Context, in *RecoveryRequest, opts ...grpc.CallOption) (*RecoveryResponse, error)
}

type recoveryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRecoveryServiceClient(cc grpc.ClientConnInterface) RecoveryServiceClient {
	return &recoveryServiceClient{cc}
}

func (c *recoveryServiceClient) PasswordRecovery(ctx context.Context, in *RecoveryRequest, opts ...grpc.CallOption) (*RecoveryResponse, error) {
	out := new(RecoveryResponse)
	err := c.cc.Invoke(ctx, "/proto.RecoveryService/PasswordRecovery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecoveryServiceServer is the server API for RecoveryService service.
type RecoveryServiceServer interface {
	PasswordRecovery(context.Context, *RecoveryRequest) (*RecoveryResponse, error)
}

// UnimplementedRecoveryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRecoveryServiceServer struct {
}

func (*UnimplementedRecoveryServiceServer) PasswordRecovery(ctx context.Context, req *RecoveryRequest) (*RecoveryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PasswordRecovery not implemented")
}

func RegisterRecoveryServiceServer(s *grpc.Server, srv RecoveryServiceServer) {
	s.RegisterService(&_RecoveryService_serviceDesc, srv)
}

func _RecoveryService_PasswordRecovery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecoveryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecoveryServiceServer).PasswordRecovery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RecoveryService/PasswordRecovery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecoveryServiceServer).PasswordRecovery(ctx, req.(*RecoveryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecoveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RecoveryService",
	HandlerType: (*RecoveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PasswordRecovery",
			Handler:    _RecoveryService_PasswordRecovery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.recovery.proto",
}
